# Brev Deployment Configuration for Vietnam Company RAG System
# This configuration sets up the environment for running the RAG-enhanced report system

name: vietnam-rag-system
description: Vietnam Company Data RAG System with Report Generation

# Environment configuration
environment:
  - NODE_ENV=production
  - REDIS_URL=redis://localhost:6379
  - PORT=3000
  - JUPYTER_PORT=8888

# Services to expose
ports:
  public:
    - 3000  # Next.js application
    - 8888  # Jupyter notebook
  private:
    - 6379  # Redis
    - 5432  # PostgreSQL (if needed)

# Startup commands
startup:
  - echo "Starting Vietnam RAG System deployment..."
  - npm install
  - npm run build
  - echo "Initializing RAG system..."
  - node scripts/ingestVietnamDocuments.ts --init
  - echo "Starting services..."
  - npm run start &
  - jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root &

# Service configuration
services:
  web:
    port: 3000
    health_check: /api/health
    start_command: npm run start
  
  jupyter:
    port: 8888
    health_check: /api/status
    start_command: jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser
    
  rag_worker:
    start_command: node scripts/ingestVietnamDocuments.ts --watch

# Data persistence
volumes:
  - ./data_products:/app/data_products
  - ./logs:/app/logs
  - ./cache:/app/cache

# Resource requirements
resources:
  cpu: 2
  memory: 4GB
  disk: 20GB

# Monitoring and logging
monitoring:
  enabled: true
  metrics_port: 9090
  log_level: info

# Security
security:
  allowed_hosts:
    - "*.brevlab.com"
    - "localhost"
  api_keys:
    - CAPITAL_IQ_API_KEY
    - OPENAI_API_KEY
    - REPORT_API_KEY

# Cron jobs for data updates
cron:
  - name: "Daily Vietnam Company Data Update"
    schedule: "0 2 * * *"  # 2 AM daily
    command: "node scripts/extractCapitalIQVietnamData.ts"
  
  - name: "RAG System Optimization"
    schedule: "0 4 * * 0"  # 4 AM every Sunday
    command: "node scripts/optimizeRAG.ts"

# Health checks
health_checks:
  web:
    path: /api/health
    interval: 30s
    timeout: 10s
  
  rag:
    path: /api/rag/health
    interval: 60s
    timeout: 30s

# Deployment hooks
hooks:
  pre_deploy:
    - echo "Running pre-deployment checks..."
    - npm test
    - npm run lint
  
  post_deploy:
    - echo "Running post-deployment tasks..."
    - node scripts/verifyRAGSystem.ts
    - curl -X POST http://localhost:3000/api/rag/warmup

# Environment-specific configurations
environments:
  development:
    replicas: 1
    debug: true
    
  staging:
    replicas: 2
    debug: false
    
  production:
    replicas: 3
    debug: false
    auto_scale:
      min: 2
      max: 5
      cpu_threshold: 80